/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    posts: Post
    media: Media
    categories: Category
    users: User
    c_sport: CSport
    c_sport_club: CSportClub
    u_athlete: UAthlete
    u_coach: UCoach
    test_results: TestResult
    c_sport_test: CSportTest
    redirects: Redirect
    'payload-preferences': PayloadPreference
    'payload-migrations': PayloadMigration
  }
  globals: {}
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string
  title: string
  categories?: (string | Category)[] | null
  publishedAt?: string | null
  authors?: (string | User)[] | null
  populatedAuthors?:
    | {
        id?: string | null
        name?: string | null
      }[]
    | null
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact'
    richText: {
      [k: string]: unknown
    }[]
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null
            newTab?: boolean | null
            url?: string | null
            label: string
            appearance?: ('default' | 'primary' | 'secondary') | null
          }
          id?: string | null
        }[]
      | null
    media?: string | Media | null
  }
  layout: (
    | {
        invertBackground?: boolean | null
        richText: {
          [k: string]: unknown
        }[]
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null
                newTab?: boolean | null
                url?: string | null
                label: string
                appearance?: ('primary' | 'secondary') | null
              }
              id?: string | null
            }[]
          | null
        id?: string | null
        blockName?: string | null
        blockType: 'cta'
      }
    | {
        invertBackground?: boolean | null
        columns?:
          | {
              size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null
              richText: {
                [k: string]: unknown
              }[]
              enableLink?: boolean | null
              link?: {
                type?: ('reference' | 'custom') | null
                newTab?: boolean | null
                url?: string | null
                label: string
                appearance?: ('default' | 'primary' | 'secondary') | null
              }
              id?: string | null
            }[]
          | null
        id?: string | null
        blockName?: string | null
        blockType: 'content'
      }
    | {
        invertBackground?: boolean | null
        position?: ('default' | 'fullscreen') | null
        media: string | Media
        id?: string | null
        blockName?: string | null
        blockType: 'mediaBlock'
      }
    | {
        introContent: {
          [k: string]: unknown
        }[]
        populateBy?: ('collection' | 'selection') | null
        relationTo?: 'posts' | null
        categories?: (string | Category)[] | null
        limit?: number | null
        selectedDocs?:
          | {
              relationTo: 'posts'
              value: string | Post
            }[]
          | null
        populatedDocs?:
          | {
              relationTo: 'posts'
              value: string | Post
            }[]
          | null
        populatedDocsTotal?: number | null
        id?: string | null
        blockName?: string | null
        blockType: 'archive'
      }
  )[]
  relatedPosts?: (string | Post)[] | null
  slug?: string | null
  meta?: {
    title?: string | null
    description?: string | null
    image?: string | Media | null
  }
  updatedAt: string
  createdAt: string
  _status?: ('draft' | 'published') | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string
  title?: string | null
  parent?: (string | null) | Category
  breadcrumbs?:
    | {
        doc?: (string | null) | Category
        url?: string | null
        label?: string | null
        id?: string | null
      }[]
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string
  name?: string | null
  roles?: ('admin' | 'user' | 'sportCoach')[] | null
  avatar?: string | Media | null
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string
  title: string
  date: string
  user?: (string | null) | User
  alt?: string | null
  caption?:
    | {
        [k: string]: unknown
      }[]
    | null
  updatedAt: string
  createdAt: string
  url?: string | null
  filename?: string | null
  mimeType?: string | null
  filesize?: number | null
  width?: number | null
  height?: number | null
  focalX?: number | null
  focalY?: number | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "c_sport".
 */
export interface CSport {
  id: string
  name: string
  info?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "c_sport_club".
 */
export interface CSportClub {
  id: string
  name: string
  short_name?: string | null
  sport: string | CSport
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "u_athlete".
 */
export interface UAthlete {
  id: string
  user?: (string | null) | User
  name?: string | null
  birth_date: string
  gender?: ('muz' | 'zena') | null
  sport: (string | CSport)[]
  club?: (string | null) | CSportClub
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "u_coach".
 */
export interface UCoach {
  id: string
  user?: (string | null) | User
  name?: string | null
  sport: (string | CSport)[]
  club?: (string | null) | CSportClub
  athletes?: (string | UAthlete)[] | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "test_results".
 */
export interface TestResult {
  id: string
  athlete: string | UAthlete
  coach?: (string | null) | UCoach
  testType: string | CSportTest
  resultData: string | Media
  date: string
  notes?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "c_sport_test".
 */
export interface CSportTest {
  id: string
  name: string
  short_name: string
  description?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string
  from: string
  to?: {
    type?: ('reference' | 'custom') | null
    reference?: {
      relationTo: 'posts'
      value: string | Post
    } | null
    url?: string | null
  }
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string
  user: {
    relationTo: 'users'
    value: string | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
